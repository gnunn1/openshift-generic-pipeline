---
- name: Set ephemeral or persistent
  set_fact:
    jenkins_template: jenkins-ephemeral
  when: jenkins_ephemeral

- name: Set ephemeral or persistent
  set_fact:
    jenkins_template: jenkins-persistent
  when: not jenkins_ephemeral

- name: Login in OpenShift
  shell: "oc login --insecure-skip-tls-verify=true -u {{ username }} -p {{ password }} {{ openshift_master }}"

- name: Create cicd OpenShift project
  shell: "oc new-project {{project_prefix}}-cicd --display-name='{{display_prefix}} CI/CD'"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"

- name: Create jenkins app
  shell: "oc new-app {{ jenkins_template }} -n {{project_prefix}}-cicd"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"

- name: Create Environments
  shell: |
    oc new-project {{project_prefix}}-dev --display-name="{{display_prefix}} Development"
    oc new-project {{project_prefix}}-test --display-name="{{display_prefix}} Test"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"

- name: Install application template
  shell: "oc create -f template_url -n {{item}} -n {{project_prefix}}-dev"
  ignore_errors: true

- name: Create application in dev
  shell: "oc new-app --template={{app_template}} -n {{project_prefix}}-dev"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"

# - name: Set ImageChange trigger to manual in dev
#   shell: "oc set triggers dc product-catalog --containers='product-catalog' --from-image='product-catalog:latest' --manual=true -n product-catalog-dev"
#   register: command_result
#   failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
#   changed_when: "'exists' not in command_result.stderr"

- name: Create application in test
  shell: "oc new-app --template={{project_prefix}}-dev/{{app_template}} -n {{project_prefix}}-test"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"

# - name: Set ImageChange trigger to manual in test
#   shell: "oc set triggers dc product-catalog --containers='product-catalog' --from-image='product-catalog:latest' --manual=true -n product-catalog-test"
#   register: command_result
#   failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
#   changed_when: "'exists' not in command_result.stderr"

# - name: Update test imagePullPolicy
#   shell: "oc patch dc/product-catalog -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"product-catalog\",\"imagePullPolicy\":\"Always\"}]}}}}'"

- name: create temporary file
  tempfile:
    state: file
    suffix: yml
  register: templatedPipeline

- name: Pipeline template
  template:
    src: "../files/pipeline.yml"
    dest: "{{templatedPipeline}}"

- name: Create Pipeline
  shell: "oc create -f {{templatedPipeline}} -n {{product-prefix}}-cicd"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"

- name: Waiting for jenkins to be ready
  command: curl -k --head --silent https://jenkins-{{product-prefix}}-cicd.{{ openshift_domain }}/login
  register: result
  until: result.stdout.find("200 OK") != -1
  retries: 30
  delay: 5
  changed_when: false

- name: Wait for Jenkins to initialize
  pause:
    seconds: 10

- name: Starting Pipeline
  shell: "oc start-build {{product-prefix}}-pipeline -n {{product-prefix}}-cicd"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"